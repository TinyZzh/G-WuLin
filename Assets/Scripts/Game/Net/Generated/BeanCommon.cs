// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: BeanCommon.proto
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Org.OkraAx.V3 {

  /// <summary>Holder for reflection information generated from BeanCommon.proto</summary>
  public static partial class BeanCommonReflection {

    #region Descriptor
    /// <summary>File descriptor for BeanCommon.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BeanCommonReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChBCZWFuQ29tbW9uLnByb3RvEg1vcmcub2tyYUF4LnYzGgtBeEFueS5wcm90",
            "byJYCghVc2VySW5mbxILCgN1aWQYASABKAMSDAoEbmFtZRgCIAEoCRIOCgZm",
            "aWd1cmUYAyABKAUSIQoDZXh0GAQgASgLMhQub3JnLm9rcmFBeC52My5BeEFu",
            "eUItChpvcmcub2tyYUF4LnYzLmJlYW5zLmNvbW1vbkILR3BjQm5Db21tb25I",
            "AVABYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Org.OkraAx.V3.AxAnyReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Org.OkraAx.V3.UserInfo), global::Org.OkraAx.V3.UserInfo.Parser, new[]{ "Uid", "Name", "Figure", "Ext" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  ///    用户信息
  /// </summary>
  public sealed partial class UserInfo : pb::IMessage<UserInfo> {
    private static readonly pb::MessageParser<UserInfo> _parser = new pb::MessageParser<UserInfo>(() => new UserInfo());
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Org.OkraAx.V3.BeanCommonReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo(UserInfo other) : this() {
      uid_ = other.uid_;
      name_ = other.name_;
      figure_ = other.figure_;
      Ext = other.ext_ != null ? other.Ext.Clone() : null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserInfo Clone() {
      return new UserInfo(this);
    }

    /// <summary>Field number for the "uid" field.</summary>
    public const int UidFieldNumber = 1;
    private long uid_;
    /// <summary>
    ///   角色 唯一ID
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Uid {
      get { return uid_; }
      set {
        uid_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    ///   角色名称
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "figure" field.</summary>
    public const int FigureFieldNumber = 3;
    private int figure_;
    /// <summary>
    ///   形象
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Figure {
      get { return figure_; }
      set {
        figure_ = value;
      }
    }

    /// <summary>Field number for the "ext" field.</summary>
    public const int ExtFieldNumber = 4;
    private global::Org.OkraAx.V3.AxAny ext_;
    /// <summary>
    ///   扩展数据 - 战绩等等
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Org.OkraAx.V3.AxAny Ext {
      get { return ext_; }
      set {
        ext_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Uid != other.Uid) return false;
      if (Name != other.Name) return false;
      if (Figure != other.Figure) return false;
      if (!object.Equals(Ext, other.Ext)) return false;
      return true;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Uid != 0L) hash ^= Uid.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Figure != 0) hash ^= Figure.GetHashCode();
      if (ext_ != null) hash ^= Ext.GetHashCode();
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Uid != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Uid);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Figure != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Figure);
      }
      if (ext_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Ext);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Uid != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Figure != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Figure);
      }
      if (ext_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Ext);
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserInfo other) {
      if (other == null) {
        return;
      }
      if (other.Uid != 0L) {
        Uid = other.Uid;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Figure != 0) {
        Figure = other.Figure;
      }
      if (other.ext_ != null) {
        if (ext_ == null) {
          ext_ = new global::Org.OkraAx.V3.AxAny();
        }
        Ext.MergeFrom(other.Ext);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            input.SkipLastField();
            break;
          case 8: {
            Uid = input.ReadInt64();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 24: {
            Figure = input.ReadInt32();
            break;
          }
          case 34: {
            if (ext_ == null) {
              ext_ = new global::Org.OkraAx.V3.AxAny();
            }
            input.ReadMessage(ext_);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
