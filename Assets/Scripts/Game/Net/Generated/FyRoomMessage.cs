// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FyRoomMessage.proto

#pragma warning disable 1591, 0612, 3021

#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;

namespace Org.OkraAx.V3
{
    /// <summary>Holder for reflection information generated from FyRoomMessage.proto</summary>
    public static partial class FyRoomMessageReflection
    {
        #region Descriptor

        /// <summary>File descriptor for FyRoomMessage.proto</summary>
        public static pbr::FileDescriptor Descriptor
        {
            get { return descriptor; }
        }

        private static pbr::FileDescriptor descriptor;

        static FyRoomMessageReflection()
        {
            var descriptorData = global::System.Convert.FromBase64String(
                string.Concat(
                    "ChNGeVJvb21NZXNzYWdlLnByb3RvEg1vcmcub2tyYUF4LnYzIhwKDFZvQ3Jl",
                    "YXRlUm9vbRIMCgR0eXBlGAEgASgFIisKC1ZvRW50ZXJSb29tEg4KBnJvb21J",
                    "ZBgBIAEoBRIMCgRzZWF0GAIgASgFIigKClZvR2V0UmVhZHkSCwoDdWlkGAEg",
                    "ASgDEg0KBXJlYWR5GAIgASgIIhwKDFZvTG9va3VwUm9vbRIMCgR0eXBlGAEg",
                    "ASgFQigKGG9yZy5va3JhQXgudjMucm9vbS5iZWFuc0IIRnlSb29tTWlIAVAB",
                    "YgZwcm90bzM="));
            descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
                new pbr::FileDescriptor[] { },
                new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[]
                {
                    new pbr::GeneratedClrTypeInfo(typeof(global::Org.OkraAx.V3.VoCreateRoom),
                        global::Org.OkraAx.V3.VoCreateRoom.Parser, new[] {"Type"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Org.OkraAx.V3.VoEnterRoom),
                        global::Org.OkraAx.V3.VoEnterRoom.Parser, new[] {"RoomId", "Seat"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Org.OkraAx.V3.VoGetReady),
                        global::Org.OkraAx.V3.VoGetReady.Parser, new[] {"Uid", "Ready"}, null, null, null),
                    new pbr::GeneratedClrTypeInfo(typeof(global::Org.OkraAx.V3.VoLookupRoom),
                        global::Org.OkraAx.V3.VoLookupRoom.Parser, new[] {"Type"}, null, null, null)
                }));
        }

        #endregion
    }

    #region Messages

    /// <summary>
    ///     创建房间
    /// </summary>
    public sealed partial class VoCreateRoom : pb::IMessage<VoCreateRoom>
    {
        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;

        private static readonly pb::MessageParser<VoCreateRoom> _parser =
            new pb::MessageParser<VoCreateRoom>(() => new VoCreateRoom());

        private int type_;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoCreateRoom()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoCreateRoom(VoCreateRoom other) : this()
        {
            type_ = other.type_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VoCreateRoom> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Org.OkraAx.V3.FyRoomMessageReflection.Descriptor.MessageTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type
        {
            get { return type_; }
            set { type_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoCreateRoom Clone()
        {
            return new VoCreateRoom(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VoCreateRoom other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Type != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Type);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            var size = 0;
            if (Type != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VoCreateRoom other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != 0)
            {
                Type = other.Type;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                    {
                        Type = input.ReadInt32();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VoCreateRoom);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            var hash = 1;
            if (Type != 0) hash ^= Type.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    /// <summary>
    ///     加入房间
    /// </summary>
    public sealed partial class VoEnterRoom : pb::IMessage<VoEnterRoom>
    {
        /// <summary>Field number for the "roomId" field.</summary>
        public const int RoomIdFieldNumber = 1;

        /// <summary>Field number for the "seat" field.</summary>
        public const int SeatFieldNumber = 2;

        private static readonly pb::MessageParser<VoEnterRoom> _parser =
            new pb::MessageParser<VoEnterRoom>(() => new VoEnterRoom());

        private int roomId_;
        private int seat_;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoEnterRoom()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoEnterRoom(VoEnterRoom other) : this()
        {
            roomId_ = other.roomId_;
            seat_ = other.seat_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VoEnterRoom> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Org.OkraAx.V3.FyRoomMessageReflection.Descriptor.MessageTypes[1]; }
        }

        /// <summary>
        ///     房间
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int RoomId
        {
            get { return roomId_; }
            set { roomId_ = value; }
        }

        /// <summary>
        ///     座位号
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Seat
        {
            get { return seat_; }
            set { seat_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoEnterRoom Clone()
        {
            return new VoEnterRoom(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VoEnterRoom other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (RoomId != other.RoomId) return false;
            if (Seat != other.Seat) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (RoomId != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(RoomId);
            }
            if (Seat != 0)
            {
                output.WriteRawTag(16);
                output.WriteInt32(Seat);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            var size = 0;
            if (RoomId != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(RoomId);
            }
            if (Seat != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Seat);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VoEnterRoom other)
        {
            if (other == null)
            {
                return;
            }
            if (other.RoomId != 0)
            {
                RoomId = other.RoomId;
            }
            if (other.Seat != 0)
            {
                Seat = other.Seat;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                    {
                        RoomId = input.ReadInt32();
                        break;
                    }
                    case 16:
                    {
                        Seat = input.ReadInt32();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VoEnterRoom);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            var hash = 1;
            if (RoomId != 0) hash ^= RoomId.GetHashCode();
            if (Seat != 0) hash ^= Seat.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    /// <summary>
    ///     准备或取消准备
    /// </summary>
    public sealed partial class VoGetReady : pb::IMessage<VoGetReady>
    {
        /// <summary>Field number for the "uid" field.</summary>
        public const int UidFieldNumber = 1;

        /// <summary>Field number for the "ready" field.</summary>
        public const int ReadyFieldNumber = 2;

        private static readonly pb::MessageParser<VoGetReady> _parser =
            new pb::MessageParser<VoGetReady>(() => new VoGetReady());

        private bool ready_;
        private long uid_;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoGetReady()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoGetReady(VoGetReady other) : this()
        {
            uid_ = other.uid_;
            ready_ = other.ready_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VoGetReady> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Org.OkraAx.V3.FyRoomMessageReflection.Descriptor.MessageTypes[2]; }
        }

        /// <summary>
        ///     唯一uid
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Uid
        {
            get { return uid_; }
            set { uid_ = value; }
        }

        /// <summary>
        ///     准备/取消准备
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Ready
        {
            get { return ready_; }
            set { ready_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoGetReady Clone()
        {
            return new VoGetReady(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VoGetReady other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Uid != other.Uid) return false;
            if (Ready != other.Ready) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Uid != 0L)
            {
                output.WriteRawTag(8);
                output.WriteInt64(Uid);
            }
            if (Ready != false)
            {
                output.WriteRawTag(16);
                output.WriteBool(Ready);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            var size = 0;
            if (Uid != 0L)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt64Size(Uid);
            }
            if (Ready != false)
            {
                size += 1 + 1;
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VoGetReady other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Uid != 0L)
            {
                Uid = other.Uid;
            }
            if (other.Ready != false)
            {
                Ready = other.Ready;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                    {
                        Uid = input.ReadInt64();
                        break;
                    }
                    case 16:
                    {
                        Ready = input.ReadBool();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VoGetReady);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            var hash = 1;
            if (Uid != 0L) hash ^= Uid.GetHashCode();
            if (Ready != false) hash ^= Ready.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    /// <summary>
    ///     搜索房间
    /// </summary>
    public sealed partial class VoLookupRoom : pb::IMessage<VoLookupRoom>
    {
        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;

        private static readonly pb::MessageParser<VoLookupRoom> _parser =
            new pb::MessageParser<VoLookupRoom>(() => new VoLookupRoom());

        private int type_;

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoLookupRoom()
        {
            OnConstruction();
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoLookupRoom(VoLookupRoom other) : this()
        {
            type_ = other.type_;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<VoLookupRoom> Parser
        {
            get { return _parser; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor
        {
            get { return global::Org.OkraAx.V3.FyRoomMessageReflection.Descriptor.MessageTypes[3]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int Type
        {
            get { return type_; }
            set { type_ = value; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor
        {
            get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public VoLookupRoom Clone()
        {
            return new VoLookupRoom(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(VoLookupRoom other)
        {
            if (ReferenceEquals(other, null))
            {
                return false;
            }
            if (ReferenceEquals(other, this))
            {
                return true;
            }
            if (Type != other.Type) return false;
            return true;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output)
        {
            if (Type != 0)
            {
                output.WriteRawTag(8);
                output.WriteInt32(Type);
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize()
        {
            var size = 0;
            if (Type != 0)
            {
                size += 1 + pb::CodedOutputStream.ComputeInt32Size(Type);
            }
            return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(VoLookupRoom other)
        {
            if (other == null)
            {
                return;
            }
            if (other.Type != 0)
            {
                Type = other.Type;
            }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input)
        {
            uint tag;
            while ((tag = input.ReadTag()) != 0)
            {
                switch (tag)
                {
                    default:
                        input.SkipLastField();
                        break;
                    case 8:
                    {
                        Type = input.ReadInt32();
                        break;
                    }
                }
            }
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other)
        {
            return Equals(other as VoLookupRoom);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode()
        {
            var hash = 1;
            if (Type != 0) hash ^= Type.GetHashCode();
            return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString()
        {
            return pb::JsonFormatter.ToDiagnosticString(this);
        }
    }

    #endregion
}

#endregion Designer generated code